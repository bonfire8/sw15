# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master", "github-actions" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }/parking
  EC2_HOST: 3.38.97.205
  EC2_SSH_USER: ec2-user
  PRIVATE_KEY: ${{ secrets.PEM_KEY }}

permissions:
  contents: read

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: make resources directory
      run: mkdir ./src/main/resources
    - name: make application.properties
      run: touch ./src/main/resources/application.properties
    - name: get application.properties values
      run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties

    - name: Gradle Permission
      run: chmod +x ./gradlew
    
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build -x test

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }}:latest

    - name: Login to Docker Hub using Access Token
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push the Docker image
      run: docker push ${{ env.DOCKER_IMAGE_NAME }}:latest
